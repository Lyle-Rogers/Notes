Create a new adonis aplication: adonis new nameOfApp
Add --api-only to create an api version: adonis new nameOfApp --api-only

Adonis comes with a list of commands you can run that will auto build models, controllers, and much more. It helps make
life simplair by doing a lot of the dirty work for you. (e.g. adonis make:model Todo -m -c This makes a model named Todo
and creates a migration and controller for the todo model with some code already ritten in all three folders)

Get a list of all adonis commands: adonis

To get information about a comand. Write the comand with a --help at the end.

this command Adonis make:controller Auth/Register --type=http does a tone of things. Like first of all,
because of the / after auth, this controller will be created with a new folder called auth. And the --type=http sets 
the controller type to http for you so you don't have to manualy sellect it type http. After the Auth folder was 
already created, I was still able to execute adonis make:controller Auth/Login --type=http and it made a new 
controller in the same folder.

choco: find choco's local version.
choco upgrade chocolatey: In an administrative command prompt run this and it will upgrade choco to it's latest version.

node -v: will check your current node version.
npm install -g update-node: It updates node to the latest version.

npm install --global yarn: It updates yarn to the latest version if you downloaded yarn with npm.
choco upgrade yarn: In an administrative terminal will update yarn to its latest version if you installed yarn with chocolatey.

npm -v: checks npm's version.
npm install npm@latest -g: Updates npm. When there is an error related to npm not being able to
find a file, this normally saves my life. If this doesn't work, check to see if node is up to date with node -v.
If it is not, use npm install -g update-node to update node from the terminal. If that doesn't work, then go to 
nodejs in the browser and update it there. I had to go to the website to do it, because I had the same npm error
trying to update node in the terminal. And in all honisty, I know you are reading this for like the twentieth time 
because you are having npm errors. So just run npm i it'll update or download everything.

npm i: Installs all your dependencies. It can help solve wierd errors too, if a dependency wasn't 
installed properly and is crashing your site.

npm install --legacy-peer-deps libraryName: Installs legacy dependencies or something if the newer versions of npm are 
throwing errors for any reason.

heroku git:remote -a appName: Will link a heroku app that is already created, to your local project.

code .: Opens VS Code inside the directory that you are cerently in.

Get-ChildItem -Path Env:\: This is how to check every user variable and their corresponding paths
in your computers system. This is an extremely helpful command!

ipconfig: In any directory can show you all your ip addresses. If your current IP address is getting rejected with django you can get a better one here.


